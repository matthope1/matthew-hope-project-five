{"version":3,"sources":["firebase.js","Product.js","Cart.js","Header.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Product","name","this","props","_this$props$productIn","productInfo","price","url","type","addToCart","react_default","a","createElement","className","src","alt","onClick","removeFromCart","Component","Cart","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","event","preventDefault","slideOutDisplay","state","cartSlideOut","setState","product","dbRef","database","ref","key","child","remove","_this2","total","href","cartList","length","map","keys","parseInt","src_Product","Header","src_Cart","Footer","App","productName","productDataObj","concat","itemToBeAdded","JSON","parse","push","orderBySelection","userSelection","target","value","orderBy","products","cart","inventory","pageLoading","productList","on","response","entries","val","_this3","filteredProds","toConsumableArray","filter","src_Header","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7c2eeb82.chunk.js","sourcesContent":["// firebase.js\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// Initialize Firebase\r\n// *** USE YOUR CONFIG OBJECT ***\r\nconst config = {\r\n\tapiKey: \"AIzaSyArVo9OLXwaGHvGmxGCMP-7nT6DiBBaX5k\",\r\n    authDomain: \"keeb-store.firebaseapp.com\",\r\n    databaseURL: \"https://keeb-store.firebaseio.com\",\r\n    projectId: \"keeb-store\",\r\n    storageBucket: \"keeb-store.appspot.com\",\r\n    messagingSenderId: \"560632301677\",\r\n    appId: \"1:560632301677:web:5f678f2f834f974e1d5764\"\t\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n// this exports the CONFIGURED version of firebase\r\nexport default firebase;","import React, { Component } from 'react'\r\n\r\nclass Product extends Component {\r\n\r\n    render() {\r\n\r\n        const  name  = this.props.name;\r\n        const { price, type, url } = this.props.productInfo;\r\n\r\n        // if this product has an add to cart prop\r\n        // then give it an add to cart buttton\r\n        if (this.props.addToCart) {\r\n            return (\r\n                <div className=\"product\" >\r\n                    <h1>{ name }  ${ price } </h1>    \r\n                    <img className=\"img\" src={url} alt=\"\"/>\r\n                    <button onClick={this.props.addToCart}> Add to cart</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"product\" >\r\n                    <h1>{ name }  ${ price } </h1>    \r\n                    <img className=\"img\" src={url} alt=\"\"/>\r\n                    <button onClick={this.props.removeFromCart}> Remove from cart</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Product;","import React, { Component } from 'react'\r\nimport firebase from './firebase';\r\nimport Product from './Product'\r\n\r\nclass Cart extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            cartSlideOut: false,\r\n        }\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        let slideOutDisplay = this.state.cartSlideOut;\r\n\r\n        this.setState({\r\n            cartSlideOut: !slideOutDisplay,\r\n        })\r\n    }\r\n\r\n    removeFromCart = (product) => {\r\n        const dbRef = firebase.database().ref('cart/')\r\n\r\n        let key = product[0];\r\n\r\n        dbRef.child(key).remove();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.cartSlideOut){\r\n            //slide out cart display\r\n            let total = 0;\r\n            return (\r\n                <div className=\"slide-out-cart\">\r\n                    <div className=\"slide-out-cart-container\">\r\n                        <h1 href=\"\" onClick={this.handleClick}>x</h1>\r\n                        <p>You have {this.props.cartList.length} item(s) in your cart!</p>\r\n                        {this.props.cartList.map((product) => {\r\n\r\n                            let name = Object.keys(product[1]);\r\n                            let productInfo = product[1][Object.keys(product[1])];\r\n                            let key = product[0];\r\n\r\n                            total = total + parseInt(productInfo.price);\r\n\r\n                            return (\r\n                                <div>\r\n                                    <Product removeFromCart={() => this.removeFromCart(product)} key={key} name={name} productInfo={productInfo} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <div className=\"cart-info\">\r\n                            <hr/>\r\n                            <p>Your order total = ${total} </p>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n           )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"nav-bar__cart-icon wrapper\">\r\n                    <a href=\"\">\r\n                        <i className=\"fas fa-shopping-cart\" onClick={this.handleClick}></i> \r\n                    </a>\r\n                    <p>{this.props.cartList.length}</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cart;","import React, { Component } from 'react';\r\nimport Cart from './Cart';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav>\r\n                    <div className=\"nav-bar wrapper\">\r\n                        <div className=\"logo\">\r\n                            <img className=\"img\" src=\"http://matthopecodes.com/project-five-assets/keebStoreLogo.png\" alt=\"logo\"/>\r\n                        </div>\r\n                        <ul className=\"nav-bar__links\">\r\n                            <li><a href=\"\">Home</a></li>\r\n                            <li><a href=\"\">Store</a></li>\r\n                            <li><a href=\"\">Contact</a></li>\r\n                        </ul>\r\n                        <Cart cartList={this.props.cartList} />\r\n                   </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  Header;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <p>KeebStore   made at Juno College</p>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport 'firebase/auth';\nimport './App.css';\n\nimport Header from './Header';\nimport Footer from './Footer';\nimport Product from './Product';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      cart: [],\n      inventory: [],\n      orderBy: 'all',\n      pageLoading: true,\n    }\n  }\n\n  componentDidMount() {\n    // variable that holds a reference to our database\n    const dbRef = firebase.database().ref();\n\n    // lists that will be populated with data from firebase\n    let productList = [];\n    let cartList = [];\n    let inventoryList = [];\n\n    // event listener that will fire every time there is a change\n    // in the firebase db\n    dbRef.on('value', (response) => {\n\n      // for each product, entries will make an array with 2 elements\n      // 0(index) being the key and 1(index) being the value\n      productList =  Object.entries(response.val().products);\n      inventoryList = Object.entries(response.val().inventory);\n    \n      if (response.val().cart){\n        cartList = Object.entries(response.val().cart);\n      } \n      else {\n        cartList = [];\n      }\n\n      this.setState({\n        products: productList,\n        cart: cartList,\n        pageLoading: false\n      })\n      \n    });\n  }\n\n  addToCart = (product) => {\n    const dbRef = firebase.database().ref('cart/');\n\n    let productName = product[0];\n    let productDataString = `{ \"price\": ${product[1].price}, \"type\": \"${product[1].type}\", \"url\": \"${product[1].url}\" }`;\n    let productDataObj = (productDataString);\n\n    let itemToBeAdded = JSON.parse(`{ \"${productName}\" : ${productDataObj} }` );\n\n    dbRef.push(itemToBeAdded);\n  }\n\n\n  orderBySelection = (event) => {\n    event.preventDefault();\n    let userSelection = event.target.value;\n\n    this.setState({\n      orderBy: userSelection,\n    })\n  }\n  \n\n  handleClick = (event) => {\n    event.preventDefault();\n  }\n\n  render (){\n\n    if (this.state.pageLoading) {\n      return (\n        <div className=\"page-loader\">\n          <h1>loading...</h1>\n        </div>\n      )\n    }\n    else {\n\n      let productsList = [...this.state.products];\n\n      //filter the displayed produducts based on user input\n      let filteredProds = productsList.filter((product) => {\n        let productInfo = product[1];\n\n        if (productInfo.type == this.state.orderBy || this.state.orderBy == 'all') {\n          return product;\n        }\n      })\n\n      return (\n        <div className=\"App\">\n          <Header cartList={this.state.cart} removeFromCart={this.removeFromCart}/>\n          <div className=\"header-background\">\n            <button onClick={this.handleClick}>Enter store</button>\n          </div> \n\n          <div className=\"orderBy\">\n            <h2>browse by: </h2>\n            <button className=\"orderBy__btn\" onClick={(event) => {this.orderBySelection(event)}} value=\"keyboard\">keyboards</button>\n            <button className=\"orderBy__btn\" onClick={(event) => {this.orderBySelection(event)}} value=\"case\">cases</button>\n            <button className=\"orderBy__btn\" onClick={(event) => {this.orderBySelection(event)}} value=\"keycap\">keycaps</button>\n            <button className=\"orderBy__btn\" onClick={(event) => {this.orderBySelection(event)}} value=\"all\">all</button>\n          </div>\n\n          <div className=\"products-flex wrapper\">\n           \n            {filteredProds.map((product) => {\n              return (\n                <Product \n                  addToCart={() => this.addToCart(product)} \n                  key={product[0]} \n                  name={product[0]} \n                  productInfo={product[1]}\n                />\n              )\n            })}\n\n          </div>\n\n          <Footer/>\n        </div>\n      )\n    }\n   \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}